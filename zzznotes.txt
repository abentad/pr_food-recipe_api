###
POST http://localhost:3000/food/steps/add HTTP/1.1
Content-Type: application/json

[
    {
        "stepName": "add tomatoe",
        "stepDescription": "add some tomatoe inside the bread",
        "stepCookTime": "1",
        "foodId": 12
    }
]

###
POST http://localhost:3000/food/steps/add HTTP/1.1
Content-Type: application/json

{
    "stepName": "add tomatoe",
    "stepDescription": "add some tomatoe inside the bread",
    "stepCookTime": "1",
    "foodId": 12
},
{
    "stepName": "add tomatoe",
    "stepDescription": "add some tomatoe inside the bread",
    "stepCookTime": "1",
    "foodId": 12
}



###
POST http://localhost:3000/food/steps/add HTTP/1.1
Content-Type: application/json

{
    "stepName": "add tomatoe",
    "stepDescription": "add some tomatoe inside the bread",
    "stepCookTime": "1",
    "foodId": 12
}

//for creating one step
    createSteps: (data, callback) =>{
        console.log(data.length);
        console.log(data);
        // const items = [];
        // console.log(data[1]);

        // for(var i = 0;i<data.length;i++){
        //   items.push(JSON.parse(data[i]));
        // }
        //TODO: work with the multiple steps inserting
        pool.query(
            // `insert into ${stepsTable}(stepName, stepDescription, stepCookTime) values(?,?,?) where foodId=?`,
            `INSERT INTO ${stepsTable}(stepName, stepDescription, stepCookTime, foodId) VALUES (?,?,?,?)`,
            [data.stepName,data.stepDescription,data.stepCookTime,data.foodId],
            // [data.map(item=> [item.stepName,item.stepDescription,item.stepCookTime,item.foodId])],
            (error, results, fields) => {
              if (error) {
                callback(error);
              } else {
                callback(null, results);
              }
            }
        );
    },